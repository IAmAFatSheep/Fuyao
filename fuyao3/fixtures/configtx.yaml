################################################################################
#
#   SECTION : Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool. The profiles which specify consortiums
#   are to be used for generating the orderer genesis block.  With the correct
#   consortium members defined in the orderer genesis block, channel creation
#   requests may be generated with only the org member names and a consortium name
#
################################################################################

################################################################################
#
#   SECTION: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:
  - &ChainHero
    Name: ChainHero
    ID: hf.chainhero.io
    AdminPrincipal: Role.ADMIN
    MSPDir: crypto-config/ordererOrganizations/hf.chainhero.io/msp

  - &Org1ChainHero
    Name: ChainHeroOrganization1
    ID: org1.hf.chainhero.io
    AdminPrincipal: Role.ADMIN
    MSPDir: crypto-config/peerOrganizations/org1.hf.chainhero.io/msp
    AnchorPeers:
      - Host: peer0.org1.hf.chainhero.io
        Port: 7051

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters.
#
################################################################################
Orderer: &OrdererDefaults

  # Orderer Type: The orderer implementation to start
  # Available types are "solo" and "kafka"
  OrdererType: kafka
  Addresses:
    - orderer.hf.chainhero.io:7050
    - orderer1.hf.chainhero.io:7050
    - orderer2.hf.chainhero.io:7050
  # Batch Timeout: The amount of time to wait before creating a batch
  BatchTimeout: 2s
  # Batch Size: Controls the number of messages batched into a block
  BatchSize:
    # Max Message Count: The maximum number of messages to permit in a batch
    MaxMessageCount: 100
    # Absolute Max Bytes: The absolute maximum number of bytes allowed for
    # the serialized messages in a batch.
    AbsoluteMaxBytes: 99 MB
    # Preferred Max Bytes: The preferred maximum number of bytes allowed for
    # the serialized messages in a batch. A message larger than the preferred
    # max bytes will result in a batch larger than preferred max bytes.
    PreferredMaxBytes: 512 KB

  Kafka:
    # Brokers: A list of Kafka brokers to which the orderer connects
    # NOTE: Use IP:port notation
    Brokers:
      - k1:9092
      - k2:9092
      - k3:9092
  # Organizations is the list of orgs which are defined as participants on
  # the orderer side of the network
  Organizations:

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters.
#
################################################################################
Application: &ApplicationDefaults
  Organizations:


################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
  # Channel capabilities apply to both the orderers and the peers and must be
  # supported by both.
  # Set the value of the capability to true to require it.
  Channel: &ChannelCapabilities
    # V1.3 for Channel is a catchall flag for behavior which has been
    # determined to be desired for all orderers and peers running at the v1.3.x
    # level, but which would be incompatible with orderers and peers from
    # prior releases.
    # Prior to enabling V1.3 channel capabilities, ensure that all
    # orderers and peers on a channel are at v1.3.0 or later.
    V1_1: true
  Orderer: &OrdererCapabilities
    V1_1: true
  Application: &ApplicationCapabilities
    V1_1: true

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
  # Policies defines the set of policies at this level of the config tree
  # For Channel policies, their canonical path is
  #   /Channel/<PolicyName>
  Policies:
    # Who may invoke the 'Deliver' API
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    # Who may invoke the 'Broadcast' API
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    # By default, who may modify elements at this config level
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"

  # Capabilities describes the channel level capabilities, see the
  # dedicated Capabilities section elsewhere in this file for a full
  # description
  Capabilities:
    <<: *ChannelCapabilities


################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
# OrdererGenesis  模板用来生成Orderer服务的初始区块文件  Capabilities 指定通道的权限信息。
#1.2 Orderer 指定了Orderer服务的信息（OrdererOrg）及权限信息。
#1.3 Consortiums 定义了联盟组成成员
#
#  OrgsChannel模板用来生成应用通道交易配置文件和锚节点更新配置文件   ChannelDefaults  通道默认配置， orderer ： orderer  制定通道 和全信啊信息， Application ：制定组织和权限信息
#  Consortiums 指定联盟成员， Consortium 指定联盟信息
#
#  生成使用 configtxgen 生成
#  根据OrdererGenesis  生成通道配置文件 sudo ../bin/configtxgen -profile OrdererGenesis -outputBlock ./channel-artifacts/genesis.block
# 生成通道交易配置文件   sudo ../bin/configtxgen -profile OrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID $CHANNEL_NAME
#  生成锚节点更新配置文件  同样基于 configtx_buk.yaml 配置文件中的 OrgsChannel 模板，为每个组织分别生成锚节点更新配置，且注意指定对应的组织名称。
#  sudo ../bin/configtxgen -profile OrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org2MSPanchors.tx -channelID $CHANNEL_NAME -asOrg Org1ChainHero
#
#  ~/go/src/github.com/hyperledger/fabric-samples/bin/configtxgen -profile OrdererGenesis -outputBlock ./artifacts/orderer.genesis.block
#  ~/go/src/github.com/hyperledger/fabric-samples/bin/configtxgen  -profile OrgsChannel -outputCreateChannelTx ./artifacts/chainhero.channel.tx -channelID chainhero
#  ~/go/src/github.com/hyperledger/fabric-samples/bin/configtxgen  -profile OrgsChannel -outputCreateChannelTx ./artifacts/token.channel.tx -channelID token
#  ~/go/src/github.com/hyperledger/fabric-samples/bin/configtxgen   -profile OrgsChannel -outputAnchorPeersUpdate ./artifacts/org1.chainhero.anchors.tx -channelID chainhero -asOrg ChainHeroOrganization1
#  ~/go/src/github.com/hyperledger/fabric-samples/bin/configtxgen   -profile OrgsChannel -outputAnchorPeersUpdate ./artifacts/org1.token.anchors.tx -channelID token -asOrg ChainHeroOrganization1
################################################################################
Profiles:
  OrdererGenesis:
    <<: *ChannelDefaults
    Capabilities:
      <<: *ChannelCapabilities
    Orderer:
      <<: *OrdererDefaults
      Organizations:
        - *ChainHero
      Capabilities:
        <<: *OrdererCapabilities
    Consortiums:
      SampleConsortium:
        Organizations:
          - *Org1ChainHero
  OrgsChannel:
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *Org1ChainHero
      Capabilities:
        <<: *ApplicationCapabilities
    Consortium: SampleConsortium
